{
    "name": "universal-js-boilerplate",
    "version": "1.4.2",
    "description": "This is a Node/Browserify/Babel/Backbone/React/etc boilerplate. To be used as an initial scaffolding tool.",
    "author": "Matthew Keas <matthiasak@gmail.com>",
    "license": "MIT",
    "main": "heroku-server.js",
    "repository": {
        "type": "git",
        "url": "https://github.com/matthiasak/universal-js-boilerplate.git"
    },
    "browserify": {
        "transform": [
            "babelify",
            "envify"
        ]
    },
    "//": [
        "https://docs.npmjs.com/misc/scripts <-- more about npm scripts"
    ],
    "babel": {
        "presets": [
            "stage-0",
            "es2015",
            "react"
        ]
    },
    "engines": {
        "node": ">=5.0.0 <6"
    },
    "config": {
        "squash_reset": "HEAD~1",
        "squash_msg": "'squashing commits down to 1 commit'"
    },
    "scripts": {
        "build:css": "node-sass scss/style.scss | postcss --use autoprefixer --use csswring -o ./dist/style.css",
        "build:js": "browserify -e ./js/app-browserify.js > ./dist/app-browserify.js",
        "build": "npm-run-all --parallel build:*; echo \"all done!\";",
        "watch:css": "npm run build:css; sane 'npm run build:css' ./scss --glob='**/*.css' --glob='**/*.scss'",
        "watch:js": "watchify ./js/app-browserify.js -p browserify-hmr -v --delay 16 -o 'exorcist ./dist/app-browserify.js.map > ./dist/app-browserify.js' -d --",
        "watch": "[ \"$NODE_ENV\" != production ] && npm-run-all --parallel watch:*; echo 'watching started, if not in production';",
        "test": "ava js/test/main.js",
        "nodemon_task": "nodemon --watch . --ext js,jsx -ignore dist heroku-server.js",
        "nodemon": "npm-run-all --parallel nodemon_task watch",
        "server": "forever heroku-server.js",
        "start": "npm-run-all --parallel server build watch",
        "bower": "bower install normalize-scss foundation typeplate-starter-kit pace; echo 'bower dependencies installed';",
        "postinstall": "npm-run-all bower production-setup",
        "production-setup": "[ \"$NODE_ENV\" == production ] && npm-run-all build; echo 'built for deployment';",
        "docs": "esdoc -c esdoc.json",
        "docs:surge": "npm-run-all docs; surge dist/esdoc;",
        "docs:gh-pages": "git add --all . && git commit -am 'cleaning up any staged and uncomitted changes'; git checkout master; npm-run-all docs; git subtree split --prefix dist -b gh-pages && git checkout gh-pages && cp -rf ./dist/esdoc/* . && git add ast class css file identifiers.html index.html script variable badge.svg coverage.json dump.json function image package.json source.html && git commit -am 'cleaning and pushing' && git push origin gh-pages:gh-pages --force; git checkout master; git branch -Dq gh-pages; echo 'done';",
        "publish:gh-pages": "git add . && git commit -am 'cleaning up any staged and uncomitted changes'; git checkout master; npm-run-all build:* && git subtree split --prefix dist -b autobuilder && git checkout autobuilder && cp dist/app-browserify.js . && cp dist/style.css . && git add app-browserify.js style.css && git commit -am 'cleaning and pushing' && git push origin autobuilder:gh-pages --force; git checkout master; git branch -Dq autobuilder; echo 'done';",
        "publish:surge": "npm-run-all build:*; rm -rf dist/esdoc; surge dist; echo 'done';",
        "teardown": "surge list; echo 'type a domain from above: \n ------------ \n\n '; surge teardown",
        "clean:subtrees": "git reflog expire --all --expire-unreachable=0; git repack -A -d; git prune; git gc;",
        "upgrade:brew": "brew update && brew upgrade",
        "check": "nsp check; echo 'check completed';",
        "dedupe": "npm dedupe",
        "deps": "browserify --list; browserify --deps;",
        "squash": "git reset $npm_package_config_squash_reset; git add .; git commit -am $npm_package_config_squash_msg; git push origin HEAD --force;",
        "squash:reset": "npm run squash --squash_reset:universal-js-boilerplate=--",
        "amend": "git commit --amend -m --",
        "logs:heroku": "heroku logs --tail"
    },
    "dependencies": {
        "autoprefixer": "^6.0.3",
        "babel-cli": "^6.1.2",
        "babel-core": "^6.1.2",
        "babel-polyfill": "^6.0.16",
        "babel-preset-es2015": "^6.1.2",
        "babel-preset-react": "^6.1.2",
        "babel-preset-stage-0": "^6.1.2",
        "babelify": "^7.2.0",
        "backbone": "^1.2.1",
        "body-parser": "^1.14.1",
        "bower": "^1.4.1",
        "browserify": "^12.0.1",
        "compression": "^1.5.2",
        "csswring": "^4.0.0",
        "csurf": "^1.8.3",
        "envify": "^3.4.0",
        "express": "^4.12.3",
        "express-session": "^1.11.3",
        "forever": "^0.15.1",
        "isomorphic-fetch": "^2.2.0",
        "jquery": "^2.1.4",
        "lodash": "^3.10.1",
        "method-override": "^2.3.3",
        "mithril-resolver": "^0.0.11",
        "nanny": "^1.0.1",
        "node-sass": "^3.4.1",
        "npm-run-all": "^1.2.12",
        "postcss-cli": "^2.1.0",
        "react": "^0.14.0",
        "react-dom": "^0.14.0",
        "react-resolver": "https://github.com/matthiasak/react-resolver.git",
        "request": "^2.55.0",
        "sane": "^1.3.0",
        "universal-utils": "^0.0.43"
    },
    "devDependencies": {
        "ava": "^0.3.0",
        "browserify-hmr": "^0.3.1",
        "esdoc": "^0.4.0",
        "esdoc-es7-plugin": "^0.0.3",
        "exorcist": "^0.4.0",
        "nodemon": "^1.3.7",
        "nsp": "^2.0.0",
        "surge": "^0.17.2",
        "watchify": "^3.4.0"
    }
}
